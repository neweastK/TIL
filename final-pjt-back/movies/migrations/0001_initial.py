# Generated by Django 3.2.12 on 2022-05-23 00:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Boxoffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('rank', models.IntegerField()),
                ('audiAcc', models.IntegerField()),
                ('independent', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('tmdb_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('adult', models.BooleanField(default=False)),
                ('independent', models.BooleanField()),
                ('release_date', models.DateField()),
                ('overview', models.TextField()),
                ('poster_path', models.TextField()),
                ('genres', models.CharField(max_length=30)),
                ('vote_average', models.FloatField()),
                ('ott', models.CharField(max_length=100)),
                ('backdrops', models.TextField()),
                ('like', models.ManyToManyField(related_name='like_movie', to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ManyToManyField(related_name='playlist_movie', to=settings.AUTH_USER_MODEL)),
                ('watch', models.ManyToManyField(related_name='watch_movie', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('rate', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('like', models.ManyToManyField(related_name='like_review', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hashtag', to='movies.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hashtag', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('tmdb_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('birth', models.DateField()),
                ('profile_path', models.TextField()),
                ('movie', models.ManyToManyField(related_name='movie_director', to='movies.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('tmdb_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('birth', models.DateField()),
                ('profile_path', models.TextField()),
                ('movie', models.ManyToManyField(related_name='movie_actor', to='movies.Movie')),
            ],
        ),
    ]
